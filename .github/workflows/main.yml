name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - staging
      - prod

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.9.0
        with:
          service_account_key: ${{ secrets.GCR_CREDENTIALS }}
          export_default_credentials: true

      - name: Authenticate Docker with GCR
        run: |
          echo ${{ secrets.GCR_CREDENTIALS }} | gcloud auth activate-service-account --key-file=-
          gcloud auth configure-docker

      - name: Build and push Docker image for dev
        if: github.ref == 'refs/heads/dev'
        run: |
          docker build -t gcr.io/$PROJECT_ID/devops-demo:dev-${{ github.run_id }} .
          docker push gcr.io/$PROJECT_ID/devops-demo:dev-${{ github.run_id }}

      - name: Build and push Docker image for staging
        if: github.ref == 'refs/heads/staging'
        run: |
          docker build -t gcr.io/$PROJECT_ID/devops-demo:staging-${{ github.run_id }} .
          docker push gcr.io/$PROJECT_ID/devops-demo:staging-${{ github.run_id }}

      - name: Deploy to Kubernetes (Dev)
        if: github.ref == 'refs/heads/dev'
        run: |
          kubectl apply -f k8s/dev/deployment.yaml
          kubectl apply -f k8s/dev/service.yaml

      - name: Deploy to Kubernetes (Staging)
        if: github.ref == 'refs/heads/staging'
        run: |
          kubectl apply -f k8s/staging/deployment.yaml
          kubectl apply -f k8s/staging/service.yaml

      - name: Clean up Docker images
        run: |
          docker rmi gcr.io/$PROJECT_ID/devops-demo:dev-${{ github.run_id }}
          docker rmi gcr.io/$PROJECT_ID/devops-demo:staging-${{ github.run_id }}
