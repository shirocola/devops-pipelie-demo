apiVersion: apps/v1
kind: Deployment
metadata:
  name: devops-pipeline-demo-deployment      # ชื่อของ deployment
  labels:
    app: devops-pipeline-demo
spec:
  replicas: 3                                # จำนวน replicas (Pod) ที่ต้องการ
  selector:
    matchLabels:
      app: devops-pipeline-demo
  template:
    metadata:
      labels:
        app: devops-pipeline-demo
    spec:
      containers:
      - name: devops-pipeline-demo-container
        image: gcr.io/your-project-id/devops-pipeline-demo:latest   # Docker image จาก GCR
        ports:
        - containerPort: 80                          # พอร์ตที่ expose
        envFrom:                                     # ดึง environment variables จาก ConfigMap หรือ Secrets
        - configMapRef:
            name: devops-pipeline-demo-config
        - secretRef:
            name: devops-pipeline-demo-secrets
        resources:
          limits:
            memory: "512Mi"                          # กำหนด resource limits
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        readinessProbe:                              # Readiness probe เพื่อตรวจสอบว่า pod พร้อมให้บริการหรือไม่
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:                               # Liveness probe เพื่อตรวจสอบว่าต้อง restart pod หรือไม่
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20
---
# Horizontal Pod Autoscaler (HPA) เพื่อการปรับขยาย Pods ตามโหลด
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: devops-pipeline-demo-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: devops-pipeline-demo-deployment
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
